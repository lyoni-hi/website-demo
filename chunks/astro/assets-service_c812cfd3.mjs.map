{"version":3,"file":"assets-service_c812cfd3.mjs","sources":["../../../node_modules/astro/dist/assets/consts.js","../../../node_modules/astro/dist/assets/services/service.js","../../../node_modules/astro/dist/assets/utils/remotePattern.js","../../../node_modules/astro/dist/assets/internal.js","../../../node_modules/astro/dist/assets/services/sharp.js"],"sourcesContent":["const VIRTUAL_MODULE_ID = \"astro:assets\";\nconst VIRTUAL_SERVICE_ID = \"virtual:image-service\";\nconst VALID_INPUT_FORMATS = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"tiff\",\n  \"webp\",\n  \"gif\",\n  \"svg\",\n  \"avif\"\n];\nconst VALID_SUPPORTED_FORMATS = [\n  \"jpeg\",\n  \"jpg\",\n  \"png\",\n  \"tiff\",\n  \"webp\",\n  \"gif\",\n  \"svg\",\n  \"avif\"\n];\nconst DEFAULT_OUTPUT_FORMAT = \"webp\";\nconst VALID_OUTPUT_FORMATS = [\"avif\", \"png\", \"webp\", \"jpeg\", \"jpg\", \"svg\"];\nconst DEFAULT_HASH_PROPS = [\"src\", \"width\", \"height\", \"format\", \"quality\"];\nexport {\n  DEFAULT_HASH_PROPS,\n  DEFAULT_OUTPUT_FORMAT,\n  VALID_INPUT_FORMATS,\n  VALID_OUTPUT_FORMATS,\n  VALID_SUPPORTED_FORMATS,\n  VIRTUAL_MODULE_ID,\n  VIRTUAL_SERVICE_ID\n};\n","import { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport { isRemotePath, joinPaths } from \"../../core/path.js\";\nimport { DEFAULT_HASH_PROPS, DEFAULT_OUTPUT_FORMAT, VALID_SUPPORTED_FORMATS } from \"../consts.js\";\nimport { isESMImportedImage, isRemoteAllowed } from \"../internal.js\";\nfunction isLocalService(service) {\n  if (!service) {\n    return false;\n  }\n  return \"transform\" in service;\n}\nfunction parseQuality(quality) {\n  let result = parseInt(quality);\n  if (Number.isNaN(result)) {\n    return quality;\n  }\n  return result;\n}\nconst baseService = {\n  propertiesToHash: DEFAULT_HASH_PROPS,\n  validateOptions(options) {\n    if (!options.src || typeof options.src !== \"string\" && typeof options.src !== \"object\") {\n      throw new AstroError({\n        ...AstroErrorData.ExpectedImage,\n        message: AstroErrorData.ExpectedImage.message(\n          JSON.stringify(options.src),\n          typeof options.src,\n          JSON.stringify(options, (_, v) => v === void 0 ? null : v)\n        )\n      });\n    }\n    if (!isESMImportedImage(options.src)) {\n      if (options.src.startsWith(\"/@fs/\") || !isRemotePath(options.src) && !options.src.startsWith(\"/\")) {\n        throw new AstroError({\n          ...AstroErrorData.LocalImageUsedWrongly,\n          message: AstroErrorData.LocalImageUsedWrongly.message(options.src)\n        });\n      }\n      let missingDimension;\n      if (!options.width && !options.height) {\n        missingDimension = \"both\";\n      } else if (!options.width && options.height) {\n        missingDimension = \"width\";\n      } else if (options.width && !options.height) {\n        missingDimension = \"height\";\n      }\n      if (missingDimension) {\n        throw new AstroError({\n          ...AstroErrorData.MissingImageDimension,\n          message: AstroErrorData.MissingImageDimension.message(missingDimension, options.src)\n        });\n      }\n    } else {\n      if (!VALID_SUPPORTED_FORMATS.includes(options.src.format)) {\n        throw new AstroError({\n          ...AstroErrorData.UnsupportedImageFormat,\n          message: AstroErrorData.UnsupportedImageFormat.message(\n            options.src.format,\n            options.src.src,\n            VALID_SUPPORTED_FORMATS\n          )\n        });\n      }\n      if (options.widths && options.densities) {\n        throw new AstroError(AstroErrorData.IncompatibleDescriptorOptions);\n      }\n      if (options.src.format === \"svg\") {\n        options.format = \"svg\";\n      }\n      if (options.src.format === \"svg\" && options.format !== \"svg\" || options.src.format !== \"svg\" && options.format === \"svg\") {\n        throw new AstroError(AstroErrorData.UnsupportedImageConversion);\n      }\n    }\n    if (!options.format) {\n      options.format = DEFAULT_OUTPUT_FORMAT;\n    }\n    if (options.width)\n      options.width = Math.round(options.width);\n    if (options.height)\n      options.height = Math.round(options.height);\n    return options;\n  },\n  getHTMLAttributes(options) {\n    const { targetWidth, targetHeight } = getTargetDimensions(options);\n    const { src, width, height, format, quality, densities, widths, formats, ...attributes } = options;\n    return {\n      ...attributes,\n      width: targetWidth,\n      height: targetHeight,\n      loading: attributes.loading ?? \"lazy\",\n      decoding: attributes.decoding ?? \"async\"\n    };\n  },\n  getSrcSet(options) {\n    const srcSet = [];\n    const { targetWidth } = getTargetDimensions(options);\n    const { widths, densities } = options;\n    const targetFormat = options.format ?? DEFAULT_OUTPUT_FORMAT;\n    let imageWidth = options.width;\n    let maxWidth = Infinity;\n    if (isESMImportedImage(options.src)) {\n      imageWidth = options.src.width;\n      maxWidth = imageWidth;\n    }\n    const {\n      width: transformWidth,\n      height: transformHeight,\n      ...transformWithoutDimensions\n    } = options;\n    const allWidths = [];\n    if (densities) {\n      const densityValues = densities.map((density) => {\n        if (typeof density === \"number\") {\n          return density;\n        } else {\n          return parseFloat(density);\n        }\n      });\n      const densityWidths = densityValues.sort().map((density) => Math.round(targetWidth * density));\n      allWidths.push(\n        ...densityWidths.map((width, index) => ({\n          maxTargetWidth: Math.min(width, maxWidth),\n          descriptor: `${densityValues[index]}x`\n        }))\n      );\n    } else if (widths) {\n      allWidths.push(\n        ...widths.map((width) => ({\n          maxTargetWidth: Math.min(width, maxWidth),\n          descriptor: `${width}w`\n        }))\n      );\n    }\n    for (const { maxTargetWidth, descriptor } of allWidths) {\n      const srcSetTransform = { ...transformWithoutDimensions };\n      if (maxTargetWidth !== imageWidth) {\n        srcSetTransform.width = maxTargetWidth;\n      } else {\n        if (options.width && options.height) {\n          srcSetTransform.width = options.width;\n          srcSetTransform.height = options.height;\n        }\n      }\n      srcSet.push({\n        transform: srcSetTransform,\n        descriptor,\n        attributes: {\n          type: `image/${targetFormat}`\n        }\n      });\n    }\n    return srcSet;\n  },\n  getURL(options, imageConfig) {\n    const searchParams = new URLSearchParams();\n    if (isESMImportedImage(options.src)) {\n      searchParams.append(\"href\", options.src.src);\n    } else if (isRemoteAllowed(options.src, imageConfig)) {\n      searchParams.append(\"href\", options.src);\n    } else {\n      return options.src;\n    }\n    const params = {\n      w: \"width\",\n      h: \"height\",\n      q: \"quality\",\n      f: \"format\"\n    };\n    Object.entries(params).forEach(([param, key]) => {\n      options[key] && searchParams.append(param, options[key].toString());\n    });\n    const imageEndpoint = joinPaths(import.meta.env.BASE_URL, \"/_image\");\n    return `${imageEndpoint}?${searchParams}`;\n  },\n  parseURL(url) {\n    const params = url.searchParams;\n    if (!params.has(\"href\")) {\n      return void 0;\n    }\n    const transform = {\n      src: params.get(\"href\"),\n      width: params.has(\"w\") ? parseInt(params.get(\"w\")) : void 0,\n      height: params.has(\"h\") ? parseInt(params.get(\"h\")) : void 0,\n      format: params.get(\"f\"),\n      quality: params.get(\"q\")\n    };\n    return transform;\n  }\n};\nfunction getTargetDimensions(options) {\n  let targetWidth = options.width;\n  let targetHeight = options.height;\n  if (isESMImportedImage(options.src)) {\n    const aspectRatio = options.src.width / options.src.height;\n    if (targetHeight && !targetWidth) {\n      targetWidth = Math.round(targetHeight * aspectRatio);\n    } else if (targetWidth && !targetHeight) {\n      targetHeight = Math.round(targetWidth / aspectRatio);\n    } else if (!targetWidth && !targetHeight) {\n      targetWidth = options.src.width;\n      targetHeight = options.src.height;\n    }\n  }\n  return {\n    targetWidth,\n    targetHeight\n  };\n}\nexport {\n  baseService,\n  isLocalService,\n  parseQuality\n};\n","function matchPattern(url, remotePattern) {\n  return matchProtocol(url, remotePattern.protocol) && matchHostname(url, remotePattern.hostname, true) && matchPort(url, remotePattern.port) && matchPathname(url, remotePattern.pathname, true);\n}\nfunction matchPort(url, port) {\n  return !port || port === url.port;\n}\nfunction matchProtocol(url, protocol) {\n  return !protocol || protocol === url.protocol.slice(0, -1);\n}\nfunction matchHostname(url, hostname, allowWildcard) {\n  if (!hostname) {\n    return true;\n  } else if (!allowWildcard || !hostname.startsWith(\"*\")) {\n    return hostname === url.hostname;\n  } else if (hostname.startsWith(\"**.\")) {\n    const slicedHostname = hostname.slice(2);\n    return slicedHostname !== url.hostname && url.hostname.endsWith(slicedHostname);\n  } else if (hostname.startsWith(\"*.\")) {\n    const slicedHostname = hostname.slice(1);\n    const additionalSubdomains = url.hostname.replace(slicedHostname, \"\").split(\".\").filter(Boolean);\n    return additionalSubdomains.length === 1;\n  }\n  return false;\n}\nfunction matchPathname(url, pathname, allowWildcard) {\n  if (!pathname) {\n    return true;\n  } else if (!allowWildcard || !pathname.endsWith(\"*\")) {\n    return pathname === url.pathname;\n  } else if (pathname.endsWith(\"/**\")) {\n    const slicedPathname = pathname.slice(0, -2);\n    return slicedPathname !== url.pathname && url.pathname.startsWith(slicedPathname);\n  } else if (pathname.endsWith(\"/*\")) {\n    const slicedPathname = pathname.slice(0, -1);\n    const additionalPathChunks = url.pathname.replace(slicedPathname, \"\").split(\"/\").filter(Boolean);\n    return additionalPathChunks.length === 1;\n  }\n  return false;\n}\nexport {\n  matchHostname,\n  matchPathname,\n  matchPattern,\n  matchPort,\n  matchProtocol\n};\n","import { isRemotePath } from \"@astrojs/internal-helpers/path\";\nimport { AstroError, AstroErrorData } from \"../core/errors/index.js\";\nimport { DEFAULT_HASH_PROPS } from \"./consts.js\";\nimport { isLocalService } from \"./services/service.js\";\nimport { matchHostname, matchPattern } from \"./utils/remotePattern.js\";\nfunction injectImageEndpoint(settings, mode) {\n  const endpointEntrypoint = settings.config.image.endpoint ?? (mode === \"dev\" ? \"astro/assets/endpoint/node\" : \"astro/assets/endpoint/generic\");\n  settings.injectedRoutes.push({\n    pattern: \"/_image\",\n    entryPoint: endpointEntrypoint,\n    prerender: false\n  });\n  return settings;\n}\nfunction isESMImportedImage(src) {\n  return typeof src === \"object\";\n}\nfunction isRemoteImage(src) {\n  return typeof src === \"string\";\n}\nfunction isRemoteAllowed(src, {\n  domains = [],\n  remotePatterns = []\n}) {\n  if (!isRemotePath(src))\n    return false;\n  const url = new URL(src);\n  return domains.some((domain) => matchHostname(url, domain)) || remotePatterns.some((remotePattern) => matchPattern(url, remotePattern));\n}\nasync function getConfiguredImageService() {\n  if (!globalThis?.astroAsset?.imageService) {\n    const { default: service } = await import(\n      // @ts-expect-error\n      \"virtual:image-service\"\n    ).catch((e) => {\n      const error = new AstroError(AstroErrorData.InvalidImageService);\n      error.cause = e;\n      throw error;\n    });\n    if (!globalThis.astroAsset)\n      globalThis.astroAsset = {};\n    globalThis.astroAsset.imageService = service;\n    return service;\n  }\n  return globalThis.astroAsset.imageService;\n}\nasync function getImage(options, imageConfig) {\n  if (!options || typeof options !== \"object\") {\n    throw new AstroError({\n      ...AstroErrorData.ExpectedImageOptions,\n      message: AstroErrorData.ExpectedImageOptions.message(JSON.stringify(options))\n    });\n  }\n  const service = await getConfiguredImageService();\n  const resolvedOptions = {\n    ...options,\n    src: typeof options.src === \"object\" && \"then\" in options.src ? (await options.src).default ?? await options.src : options.src\n  };\n  const clonedSrc = isESMImportedImage(resolvedOptions.src) ? (\n    // @ts-expect-error - clone is a private, hidden prop\n    resolvedOptions.src.clone ?? resolvedOptions.src\n  ) : resolvedOptions.src;\n  resolvedOptions.src = clonedSrc;\n  const validatedOptions = service.validateOptions ? await service.validateOptions(resolvedOptions, imageConfig) : resolvedOptions;\n  const srcSetTransforms = service.getSrcSet ? await service.getSrcSet(validatedOptions, imageConfig) : [];\n  let imageURL = await service.getURL(validatedOptions, imageConfig);\n  let srcSets = await Promise.all(\n    srcSetTransforms.map(async (srcSet) => ({\n      transform: srcSet.transform,\n      url: await service.getURL(srcSet.transform, imageConfig),\n      descriptor: srcSet.descriptor,\n      attributes: srcSet.attributes\n    }))\n  );\n  if (isLocalService(service) && globalThis.astroAsset.addStaticImage && !(isRemoteImage(validatedOptions.src) && imageURL === validatedOptions.src)) {\n    const propsToHash = service.propertiesToHash ?? DEFAULT_HASH_PROPS;\n    imageURL = globalThis.astroAsset.addStaticImage(validatedOptions, propsToHash);\n    srcSets = srcSetTransforms.map((srcSet) => ({\n      transform: srcSet.transform,\n      url: globalThis.astroAsset.addStaticImage(srcSet.transform, propsToHash),\n      descriptor: srcSet.descriptor,\n      attributes: srcSet.attributes\n    }));\n  }\n  return {\n    rawOptions: resolvedOptions,\n    options: validatedOptions,\n    src: imageURL,\n    srcSet: {\n      values: srcSets,\n      attribute: srcSets.map((srcSet) => `${srcSet.url} ${srcSet.descriptor}`).join(\", \")\n    },\n    attributes: service.getHTMLAttributes !== void 0 ? await service.getHTMLAttributes(validatedOptions, imageConfig) : {}\n  };\n}\nexport {\n  getConfiguredImageService,\n  getImage,\n  injectImageEndpoint,\n  isESMImportedImage,\n  isRemoteAllowed,\n  isRemoteImage\n};\n","import { AstroError, AstroErrorData } from \"../../core/errors/index.js\";\nimport {\n  baseService,\n  parseQuality\n} from \"./service.js\";\nlet sharp;\nconst qualityTable = {\n  low: 25,\n  mid: 50,\n  high: 80,\n  max: 100\n};\nasync function loadSharp() {\n  let sharpImport;\n  try {\n    sharpImport = (await import(\"sharp\")).default;\n  } catch (e) {\n    throw new AstroError(AstroErrorData.MissingSharp);\n  }\n  return sharpImport;\n}\nconst sharpService = {\n  validateOptions: baseService.validateOptions,\n  getURL: baseService.getURL,\n  parseURL: baseService.parseURL,\n  getHTMLAttributes: baseService.getHTMLAttributes,\n  getSrcSet: baseService.getSrcSet,\n  async transform(inputBuffer, transformOptions) {\n    if (!sharp)\n      sharp = await loadSharp();\n    const transform = transformOptions;\n    if (transform.format === \"svg\")\n      return { data: inputBuffer, format: \"svg\" };\n    let result = sharp(inputBuffer, { failOnError: false, pages: -1 });\n    result.rotate();\n    if (transform.height && !transform.width) {\n      result.resize({ height: Math.round(transform.height) });\n    } else if (transform.width) {\n      result.resize({ width: Math.round(transform.width) });\n    }\n    if (transform.format) {\n      let quality = void 0;\n      if (transform.quality) {\n        const parsedQuality = parseQuality(transform.quality);\n        if (typeof parsedQuality === \"number\") {\n          quality = parsedQuality;\n        } else {\n          quality = transform.quality in qualityTable ? qualityTable[transform.quality] : void 0;\n        }\n      }\n      result.toFormat(transform.format, { quality });\n    }\n    const { data, info } = await result.toBuffer({ resolveWithObject: true });\n    return {\n      data,\n      format: info.format\n    };\n  }\n};\nvar sharp_default = sharpService;\nexport {\n  sharp_default as default\n};\n"],"names":["AstroErrorData.ExpectedImage","AstroErrorData.LocalImageUsedWrongly","AstroErrorData.MissingImageDimension","AstroErrorData.UnsupportedImageFormat","AstroErrorData.IncompatibleDescriptorOptions","AstroErrorData.UnsupportedImageConversion","AstroErrorData.InvalidImageService","AstroErrorData.ExpectedImageOptions","AstroErrorData.MissingSharp"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}