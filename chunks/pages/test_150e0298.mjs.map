{"version":3,"file":"test_150e0298.mjs","sources":["../../../node_modules/astro/components/Image.astro","../../../node_modules/astro/components/Picture.astro","../../../src/pages/[lang]/blog/test.mdx"],"sourcesContent":["---\nimport { getImage, type LocalImageProps, type RemoteImageProps } from 'astro:assets';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type { HTMLAttributes } from '../types';\n\n// The TypeScript diagnostic for JSX props uses the last member of the union to suggest props, so it would be better for\n// LocalImageProps to be last. Unfortunately, when we do this the error messages that remote images get are complete nonsense\n// Not 100% sure how to fix this, seems to be a TypeScript issue. Unfortunate.\ntype Props = LocalImageProps | RemoteImageProps;\n\nconst props = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\n// As a convenience, allow width and height to be string with a number in them, to match HTML's native `img`.\nif (typeof props.width === 'string') {\n\tprops.width = parseInt(props.width);\n}\n\nif (typeof props.height === 'string') {\n\tprops.height = parseInt(props.height);\n}\n\nconst image = await getImage(props);\n\nconst additionalAttributes: HTMLAttributes<'img'> = {};\nif (image.srcSet.values.length > 0) {\n\tadditionalAttributes.srcset = image.srcSet.attribute;\n}\n---\n\n<img src={image.src} {...additionalAttributes} {...image.attributes} />\n","---\nimport { getImage, type LocalImageProps, type RemoteImageProps } from 'astro:assets';\nimport type { GetImageResult, ImageOutputFormat } from '../dist/@types/astro';\nimport { isESMImportedImage } from '../dist/assets/internal';\nimport { AstroError, AstroErrorData } from '../dist/core/errors/index.js';\nimport type { HTMLAttributes } from '../types';\n\ntype Props = (LocalImageProps | RemoteImageProps) & {\n\tformats?: ImageOutputFormat[];\n\tfallbackFormat?: ImageOutputFormat;\n\tpictureAttributes?: HTMLAttributes<'picture'>;\n};\n\nconst defaultFormats = ['webp'] as const;\nconst defaultFallbackFormat = 'png' as const;\n\n// Certain formats don't want PNG fallbacks:\n// - GIF will typically want to stay as a gif, either for animation or for the lower amount of colors\n// - SVGs can't be converted to raster formats in most cases\n// - JPEGs compress photographs and high-noise images better than PNG in most cases\n// For those, we'll use the original format as the fallback instead.\nconst specialFormatsFallback = ['gif', 'svg', 'jpg', 'jpeg'] as const;\n\nconst { formats = defaultFormats, pictureAttributes = {}, fallbackFormat, ...props } = Astro.props;\n\nif (props.alt === undefined || props.alt === null) {\n\tthrow new AstroError(AstroErrorData.ImageMissingAlt);\n}\n\nconst optimizedImages: GetImageResult[] = await Promise.all(\n\tformats.map(\n\t\tasync (format) =>\n\t\t\tawait getImage({ ...props, format: format, widths: props.widths, densities: props.densities })\n\t)\n);\n\nlet resultFallbackFormat = fallbackFormat ?? defaultFallbackFormat;\nif (\n\t!fallbackFormat &&\n\tisESMImportedImage(props.src) &&\n\tspecialFormatsFallback.includes(props.src.format)\n) {\n\tresultFallbackFormat = props.src.format;\n}\n\nconst fallbackImage = await getImage({\n\t...props,\n\tformat: resultFallbackFormat,\n\twidths: props.widths,\n\tdensities: props.densities,\n});\n\nconst imgAdditionalAttributes: HTMLAttributes<'img'> = {};\nconst sourceAdditionaAttributes: HTMLAttributes<'source'> = {};\n\n// Propagate the `sizes` attribute to the `source` elements\nif (props.sizes) {\n\tsourceAdditionaAttributes.sizes = props.sizes;\n}\n\nif (fallbackImage.srcSet.values.length > 0) {\n\timgAdditionalAttributes.srcset = fallbackImage.srcSet.attribute;\n}\n---\n\n<picture {...pictureAttributes}>\n\t{\n\t\tObject.entries(optimizedImages).map(([_, image]) => {\n\t\t\tconst srcsetAttribute =\n\t\t\t\tprops.densities || (!props.densities && !props.widths)\n\t\t\t\t\t? `${image.src}${image.srcSet.values.length > 0 ? ', ' + image.srcSet.attribute : ''}`\n\t\t\t\t\t: image.srcSet.attribute;\n\t\t\treturn (\n\t\t\t\t<source\n\t\t\t\t\tsrcset={srcsetAttribute}\n\t\t\t\t\ttype={'image/' + image.options.format}\n\t\t\t\t\t{...sourceAdditionaAttributes}\n\t\t\t\t/>\n\t\t\t);\n\t\t})\n\t}\n\t<img src={fallbackImage.src} {...imgAdditionalAttributes} {...fallbackImage.attributes} />\n</picture>\n","---\nlayout: ../../../layouts/BlogLayout.astro\ntitle: epic test\ndescription: super epic\ntags: read, if, cute\nsection: Technology\npublishDate: 2022-12-26T23:04:18.855Z\n---\n\n```js\nimport owo from \"foo\";\n\nconsole.log(owo`owo`);\n```\n\n**bold** and _italic_ and ~~strikethrough~~\n\n> unstyled blockquote whaaa\n\n-   aaaa\n    -   awa\n"],"names":["$$Astro","$$createAstro","$$createComponent","Astro","AstroErrorData.ImageMissingAlt","$$render","$$maybeRenderHead","$$addAttribute","$$spreadAttributes","_jsx","_components","span","class","children","_jsxs","p","strong","del","blockquote","ul","li"],"mappings":"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","x_google_ignoreList":[0,1]}