{"version":3,"file":"client.ef651e53.js","sources":["../../node_modules/@astrojs/svelte/client.js"],"sourcesContent":["const noop = () => {};\n\nlet originalConsoleWarning;\nlet consoleFilterRefs = 0;\n\nexport default (element) => {\n\treturn (Component, props, slotted, { client }) => {\n\t\tif (!element.hasAttribute('ssr')) return;\n\t\tconst slots = {};\n\t\tfor (const [key, value] of Object.entries(slotted)) {\n\t\t\tslots[key] = createSlotDefinition(key, value);\n\t\t}\n\n\t\ttry {\n\t\t\tif (import.meta.env.DEV) useConsoleFilter();\n\n\t\t\tconst component = new Component({\n\t\t\t\ttarget: element,\n\t\t\t\tprops: {\n\t\t\t\t\t...props,\n\t\t\t\t\t$$slots: slots,\n\t\t\t\t\t$$scope: { ctx: [] },\n\t\t\t\t},\n\t\t\t\thydrate: client !== 'only',\n\t\t\t\t$$inline: true,\n\t\t\t});\n\n\t\t\telement.addEventListener('astro:unmount', () => component.$destroy(), { once: true });\n\t\t} catch (e) {\n\t\t} finally {\n\t\t\tif (import.meta.env.DEV) finishUsingConsoleFilter();\n\t\t}\n\t};\n};\n\nfunction createSlotDefinition(key, children) {\n\tlet parent;\n\treturn [\n\t\t() => ({\n\t\t\t// mount\n\t\t\tm(target) {\n\t\t\t\tparent = target;\n\t\t\t\ttarget.insertAdjacentHTML(\n\t\t\t\t\t'beforeend',\n\t\t\t\t\t`<astro-slot${key === 'default' ? '' : ` name=\"${key}\"`}>${children}</astro-slot>`\n\t\t\t\t);\n\t\t\t},\n\t\t\t// create\n\t\t\tc: noop,\n\t\t\t// hydrate\n\t\t\tl: noop,\n\t\t\t// destroy\n\t\t\td() {\n\t\t\t\tif (!parent) return;\n\t\t\t\tconst slot = parent.querySelector(\n\t\t\t\t\t`astro-slot${key === 'default' ? ':not([name])' : `[name=\"${key}\"]`}`\n\t\t\t\t);\n\t\t\t\tif (slot) slot.remove();\n\t\t\t},\n\t\t}),\n\t\tnoop,\n\t\tnoop,\n\t];\n}\n\n/**\n * Reduces console noise by filtering known non-problematic warnings.\n *\n * Performs reference counting to allow parallel usage from async code.\n *\n * To stop filtering, please ensure that there always is a matching call\n * to `finishUsingConsoleFilter` afterwards.\n */\nfunction useConsoleFilter() {\n\tconsoleFilterRefs++;\n\n\tif (!originalConsoleWarning) {\n\t\toriginalConsoleWarning = console.warn;\n\t\ttry {\n\t\t\tconsole.warn = filteredConsoleWarning;\n\t\t} catch (error) {\n\t\t\t// If we're unable to hook `console.warn`, just accept it\n\t\t}\n\t}\n}\n\n/**\n * Indicates that the filter installed by `useConsoleFilter`\n * is no longer needed by the calling code.\n */\nfunction finishUsingConsoleFilter() {\n\tconsoleFilterRefs--;\n\n\t// Note: Instead of reverting `console.warning` back to the original\n\t// when the reference counter reaches 0, we leave our hook installed\n\t// to prevent potential race conditions once `check` is made async\n}\n\n/**\n * Hook/wrapper function for the global `console.warning` function.\n *\n * Ignores known non-problematic errors while any code is using the console filter.\n * Otherwise, simply forwards all arguments to the original function.\n */\nfunction filteredConsoleWarning(msg, ...rest) {\n\tif (consoleFilterRefs > 0 && typeof msg === 'string') {\n\t\t// Astro passes a `class` prop to the Svelte component, which\n\t\t// outputs the following warning, which we can safely filter out.\n\t\tconst isKnownSvelteError = msg.endsWith(\"was created with unknown prop 'class'\");\n\t\tif (isKnownSvelteError) return;\n\t}\n\toriginalConsoleWarning(msg, ...rest);\n}\n"],"names":["noop","client","element","Component","props","slotted","slots","key","value","createSlotDefinition","component","children","parent","target","slot"],"mappings":"AAAA,MAAMA,EAAO,IAAM,CAAA,EAKnB,MAAeC,EAACC,GACR,CAACC,EAAWC,EAAOC,EAAS,CAAE,OAAAJ,CAAM,IAAO,CACjD,GAAI,CAACC,EAAQ,aAAa,KAAK,EAAG,OAClC,MAAMI,EAAQ,CAAA,EACd,SAAW,CAACC,EAAKC,CAAK,IAAK,OAAO,QAAQH,CAAO,EAChDC,EAAMC,CAAG,EAAIE,EAAqBF,EAAKC,CAAK,EAG7C,GAAI,CAGH,MAAME,EAAY,IAAIP,EAAU,CAC/B,OAAQD,EACR,MAAO,CACN,GAAGE,EACH,QAASE,EACT,QAAS,CAAE,IAAK,EAAI,CACpB,EACD,QAASL,IAAW,OACpB,SAAU,EACd,CAAI,EAEDC,EAAQ,iBAAiB,gBAAiB,IAAMQ,EAAU,SAAQ,EAAI,CAAE,KAAM,EAAI,CAAE,CACpF,MAAW,CACd,QAAY,CAET,CACH,EAGA,SAASD,EAAqBF,EAAKI,EAAU,CAC5C,IAAIC,EACJ,MAAO,CACN,KAAO,CAEN,EAAEC,EAAQ,CACTD,EAASC,EACTA,EAAO,mBACN,YACA,cAAcN,IAAQ,UAAY,GAAK,UAAUA,CAAG,GAAG,IAAII,CAAQ,eACxE,CACI,EAED,EAAGX,EAEH,EAAGA,EAEH,GAAI,CACH,GAAI,CAACY,EAAQ,OACb,MAAME,EAAOF,EAAO,cACnB,aAAaL,IAAQ,UAAY,eAAiB,UAAUA,CAAG,IAAI,EACxE,EACQO,GAAMA,EAAK,QACf,CACJ,GACEd,EACAA,CACF,CACA","x_google_ignoreList":[0]}